package com.example.uploaddownloadapi1.controller;import com.example.uploaddownloadapi1.service.FileStorageService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.core.io.InputStreamResource;import org.springframework.core.io.Resource;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import java.io.IOException;import java.nio.file.Files;import java.util.logging.Level;import java.util.logging.Logger;@RestControllerpublic class FileManagerController {    @Autowired    private FileStorageService fileStorageService;    private static final Logger log = Logger.getLogger(FileManagerController.class.getName());    @PostMapping("/upload-file")    public boolean upload (@RequestParam("file")MultipartFile file) {        try {            fileStorageService.saveFile(file);            return true;        }catch (IOException e) {            log.log(Level.SEVERE, "Exception during upload", e);        }        return false;    }    @GetMapping("/download-file")    public ResponseEntity<Resource> downloadFile (@RequestParam("filename")String filename) {        try {            var fileToDownload = fileStorageService.getDownload(filename);            return ResponseEntity.ok()                    .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" +filename +"\"")                    .contentLength(filename.length())                    .contentType(MediaType.APPLICATION_OCTET_STREAM)                    .body(new InputStreamResource(Files.newInputStream(fileToDownload.toPath())));        } catch (Exception e) {            return ResponseEntity.notFound().build();        }    }    @GetMapping("/download-faster")    public ResponseEntity<Resource> downloadFile (@RequestParam("filename")String filename) {        try {            var fileToDownload = fileStorageService.getDownload(filename);            return ResponseEntity.ok()                    .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" +filename +"\"")                    .contentLength(filename.length())                    .contentType(MediaType.APPLICATION_OCTET_STREAM)                    .body(new InputStreamResource(Files.newInputStream(fileToDownload.toPath())));        } catch (Exception e) {            return ResponseEntity.notFound().build();        }    }}